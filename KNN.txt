import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler
from sklearn.neighbors import KNeighborsClassifier

# Load the dataset
file_path = 'data_new.csv'
data = pd.read_csv(file_path)

# Extract features and labels
features = data[['Age', 'Income']]
labels = data['Risk']

# Convert 'Income' to numerical after removing '$' and ',' and converting to float
features.loc[:, 'Income'] = features['Income'].replace('[\$,]', '', regex=True).astype(float)

# Use MinMaxScaler for feature scaling
scaler = MinMaxScaler()
features_scaled = scaler.fit_transform(features)

# Split the data into training and testing sets
X_train = features_scaled[:-1]  # All records except the last one
y_train = labels[:-1]
X_test = features_scaled[-1:]  # The last record
y_test = labels[-1:]

# Create k-NN classifier with Euclidean distance
k_value = 9 # Adjust as needed
knn_classifier = KNeighborsClassifier(n_neighbors=k_value, metric='euclidean')

# Train the classifier
knn_classifier.fit(X_train, y_train)

# Predict the risk for the 10th record
predicted_risk = knn_classifier.predict(X_test)

print("Predicted Risk for Record #10:", predicted_risk[0])
